<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<context:component-scan base-package="com.newgen.myapp.controller" />
	<mvc:annotation-driven />

	<context:property-placeholder
		location="classpath:utility/database.properties, classpath:utility/hibernate.properties" />


	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />

	<!-- Hibernate Layer -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="${database.driver}"></beans:property>
		<beans:property name="url" value="${database.url}"></beans:property>
		<beans:property name="username" value="${database.user}"></beans:property>
		<beans:property name="password" value="${database.password}"></beans:property>
	</beans:bean>

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.newgen.myapp.model.Voter</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop>
				<beans:prop key="hibernate.connection.pool_size">${hibernate.connection.pool_size}
				</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="hibernateTransactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory"></beans:property>
	</beans:bean>


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Declaration of Tiles2 Pluggin -->
	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</beans:bean>

	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/appServlet/tiles.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<!-- Declaration of Service Layer -->

	<!-- Declaration of Dao Layer -->
	<beans:bean id="voterDao" class="com.newgen.myapp.daoimpl.VoterDaoImpl" />
	<beans:bean id="addressDao" class="com.newgen.myapp.daoimpl.AddressDaoImpl" />

</beans:beans>
